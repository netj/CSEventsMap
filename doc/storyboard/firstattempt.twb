<?xml version='1.0' encoding='utf-8' ?>

<workbook version='7.11' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 6100.11.0926.1918                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='conf#tab (conf.tab)' inline='true' name='csv.40843.710587442132' version='7.11'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='Z:\cs448b\Assignment3\src\data\' driver='' filename='conf.tab' force-character-set='no' force-header='no' force-separator='yes' header='yes' separator='&#9;'>
        <relation name='conf#tab' table='[conf#tab]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column datatype='datetime' name='[Begins]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Countries' datatype='string' name='[Where (copy) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Where (copy)]' default='&quot;Österreichische Artificial-Intelligence-Tagung, Ottstein/Niederösterreich&quot;'>
          <bin value='&quot;Adelphi, Maryland, USA&quot;'>
            <value>&quot;Adelphi, Maryland, USA&quot;</value>
            <value>&quot;Akron, Ohio, USA&quot;</value>
            <value>&quot;Albany, New York, USA&quot;</value>
            <value>&quot;Albuquerque, New Mexico, USA&quot;</value>
            <value>&quot;Alexandria, Virginia, USA&quot;</value>
            <value>&quot;Ames, Iowa, USA&quot;</value>
            <value>&quot;Amherst, Massachusetts, USA&quot;</value>
            <value>&quot;Anaheim Convention Center, California, USA&quot;</value>
            <value>&quot;Anaheim, California, USA&quot;</value>
            <value>&quot;Analysis Washington, D.C., USA&quot;</value>
            <value>&quot;Anchorage, Alaska, USA&quot;</value>
            <value>&quot;Ann Arbor, Michigan, USA&quot;</value>
            <value>&quot;Annapolis, Maryland, USA&quot;</value>
            <value>&quot;Argonne, Illinois, USA&quot;</value>
            <value>&quot;Arlington, Texas, USA&quot;</value>
            <value>&quot;Arlington, Virginia, USA&quot;</value>
            <value>&quot;Asilomar, California, USA&quot;</value>
            <value>&quot;Aspen Grove, Utah, USA&quot;</value>
            <value>&quot;Athens, Georgia, USA&quot;</value>
            <value>&quot;Atlanta, Georgia, USA&quot;</value>
            <value>&quot;Atlanta, USA&quot;</value>
            <value>&quot;Atlantic City, New Jersey, USA&quot;</value>
            <value>&quot;Austin, Texas, USA&quot;</value>
            <value>&quot;Baltimore, Maryland, USA&quot;</value>
            <value>&quot;Bathesda, Maryland, USA&quot;</value>
            <value>&quot;Baton Rouge, Louisiana, USA&quot;</value>
            <value>&quot;Belfast, Maine, USA&quot;</value>
            <value>&quot;Bellaire, Michigan, USA&quot;</value>
            <value>&quot;Bellevue, Washington, USA&quot;</value>
            <value>&quot;Berkeley Springs, West Virginia, USA&quot;</value>
            <value>&quot;Berkeley, California, USA&quot;</value>
            <value>&quot;Berleley, California, USA&quot;</value>
            <value>&quot;Berleley/Oakland, California, USA&quot;</value>
            <value>&quot;Bethesda, Maryland, USA&quot;</value>
            <value>&quot;Bethlehem, Pennsylvania, USA&quot;</value>
            <value>&quot;Beverly, Massachusetts, USA&quot;</value>
            <value>&quot;Big Island, Hawaii, USA&quot;</value>
            <value>&quot;Big Sky, Montana, USA&quot;</value>
            <value>&quot;Birmingham, Alabama, USA&quot;</value>
            <value>&quot;Blacksburg, Virginia, USA&quot;</value>
            <value>&quot;Bloomington, Illinois, USA&quot;</value>
            <value>&quot;Bloomington, Indiana, USA&quot;</value>
            <value>&quot;Boca Raton, Florida, USA&quot;</value>
            <value>&quot;Bodega Bay, California, USA&quot;</value>
            <value>&quot;Boise, Idaho, USA&quot;</value>
            <value>&quot;Bolton Landing, New York, USA&quot;</value>
            <value>&quot;Boston, Massachusetts, USA&quot;</value>
            <value>&quot;Boston, USA&quot;</value>
            <value>&quot;Boulder, Colorado, USA&quot;</value>
            <value>&quot;Breckenridge, Colorado, USA&quot;</value>
            <value>&quot;Bridgeport, Connecticut, USA&quot;</value>
            <value>&quot;Brooklyn, New York, USA&quot;</value>
            <value>&quot;Buffalo, New York, USA&quot;</value>
            <value>&quot;Burlington, Vermont, USA&quot;</value>
            <value>&quot;California, USA&quot;</value>
            <value>&quot;Callaway Gardens, Georgia, USA&quot;</value>
            <value>&quot;Callicoon, New York, USA&quot;</value>
            <value>&quot;Cambridge, Massachusetts, USA&quot;</value>
            <value>&quot;Cambridge, USA&quot;</value>
            <value>&quot;Cape Cod, Massachusetts, USA&quot;</value>
            <value>&quot;Carson, California, USA&quot;</value>
            <value>&quot;Center, Michigan, USA&quot;</value>
            <value>&quot;Chantilly, Virginia, USA&quot;</value>
            <value>&quot;Chapel Hill, North Carolina, USA&quot;</value>
            <value>&quot;Charleston, South Carolina, USA&quot;</value>
            <value>&quot;Charlotte, North Carolina, USA&quot;</value>
            <value>&quot;Charlottesville, Virginia, USA&quot;</value>
            <value>&quot;Chattanooga, Tennessee, USA&quot;</value>
            <value>&quot;Chicago, Illinois, USA&quot;</value>
            <value>&quot;Chicago, USA&quot;</value>
            <value>&quot;Cincinnati, Kentucky, USA&quot;</value>
            <value>&quot;Cincinnati, Ohio, USA&quot;</value>
            <value>&quot;Claremont, California, USA&quot;</value>
            <value>&quot;Clearwater Beach, Florida, USA&quot;</value>
            <value>&quot;Clemson, South Carolina, USA&quot;</value>
            <value>&quot;Cleveland, Ohio, USA&quot;</value>
            <value>&quot;Cloudcroft, New Mexico, USA&quot;</value>
            <value>&quot;Coconut Grove, Florida, USA&quot;</value>
            <value>&quot;Coeur d&apos;Alene, Idaho, USA&quot;</value>
            <value>&quot;College Park, Maryland, USA&quot;</value>
            <value>&quot;College Station, Texas, USA&quot;</value>
            <value>&quot;Colonial Williamsburg, Virginia, USA&quot;</value>
            <value>&quot;Colorado Springs, Colorado, USA&quot;</value>
            <value>&quot;Colorado Springs, USA&quot;</value>
            <value>&quot;Colorado, USA&quot;</value>
            <value>&quot;Columbia, Maryland, USA&quot;</value>
            <value>&quot;Columbus, Ohio, USA&quot;</value>
            <value>&quot;Control San Francisco, California, USA&quot;</value>
            <value>&quot;Copper Mountain, Colorado, USA&quot;</value>
            <value>&quot;Coral Gables, Florida, USA&quot;</value>
            <value>&quot;Corvallis, Oregon, USA&quot;</value>
            <value>&quot;Covington, Kentucky, USA&quot;</value>
            <value>&quot;Cryptology Santa Barbara, California, USA&quot;</value>
            <value>&quot;Cumberland Falls, Kentucky, USA&quot;</value>
            <value>&quot;D.C., USA&quot;</value>
            <value>&quot;Dallas / Richardson, Texas, USA&quot;</value>
            <value>&quot;Dallas, Texas, USA&quot;</value>
            <value>&quot;Dana Point, California, USA&quot;</value>
            <value>&quot;Davis, California, USA&quot;</value>
            <value>&quot;Dayton, Ohio, USA&quot;</value>
            <value>&quot;Dearborn, Michigan, USA&quot;</value>
            <value>&quot;Deerfield Beach, Florida, USA&quot;</value>
            <value>&quot;Denver, Colorado, USA&quot;</value>
            <value>&quot;Denver, USA&quot;</value>
            <value>&quot;Destin, Florida, USA&quot;</value>
            <value>&quot;Detroit, Michigan, USA&quot;</value>
            <value>&quot;Durham, New Hampshire, USA&quot;</value>
            <value>&quot;Durham, North Carolina, USA&quot;</value>
            <value>&quot;East Lansing, Michigan, USA&quot;</value>
            <value>&quot;East Stroudsburg, Pennsylvania, USA&quot;</value>
            <value>&quot;Ecole Polytechnique Federale de Lausanne, Switzerland&quot;</value>
            <value>&quot;El Paso, Texas, USA&quot;</value>
            <value>&quot;Ellicottville, New York, USA&quot;</value>
            <value>&quot;Entity-Relationship Approach New York, USA&quot;</value>
            <value>&quot;Estes Park, Colorado, USA&quot;</value>
            <value>&quot;Evanston, Illinois, USA&quot;</value>
            <value>&quot;Fairfax, Virginia, USA&quot;</value>
            <value>&quot;Falls Church, Virginia, USA&quot;</value>
            <value>&quot;Fayetteville, Arkansas, USA&quot;</value>
            <value>&quot;Flagstaff, Arizona, USA&quot;</value>
            <value>&quot;Florida, Florida, USA&quot;</value>
            <value>&quot;Florida, USA&quot;</value>
            <value>&quot;Fort Collins, Colorado, USA&quot;</value>
            <value>&quot;Fort Lauderdale, Florida, USA&quot;</value>
            <value>&quot;Fort Worth, Texas, USA&quot;</value>
            <value>&quot;Framingham, Massachusetts, USA&quot;</value>
            <value>&quot;Ft. Collins, Colorado, USA&quot;</value>
            <value>&quot;Ft. Lauderdale, Florida, USA&quot;</value>
            <value>&quot;Gainesville, Florida, USA&quot;</value>
            <value>&quot;Gaithersburg, Maryland, USA&quot;</value>
            <value>&quot;Galtinburg, Tennessee, USA&quot;</value>
            <value>&quot;Galveston, Texas, USA&quot;</value>
            <value>&quot;Gazimagusa, North Cyprus&quot;</value>
            <value>&quot;Georgia, Alabama, USA&quot;</value>
            <value>&quot;Georgia, USA&quot;</value>
            <value>&quot;Glenwood Springs, Colorado, USA&quot;</value>
            <value>&quot;Graph Reduction Santa Fé, New Mexico, USA&quot;</value>
            <value>&quot;Greenbelt, Maryland, USA&quot;</value>
            <value>&quot;Greenville, South Carolina, USA&quot;</value>
            <value>&quot;Guam, USA&quot;</value>
            <value>&quot;Hampton, Virginia, USA&quot;</value>
            <value>&quot;Hanover, New Hampshire, USA&quot;</value>
            <value>&quot;Hawaii, USA&quot;</value>
            <value>&quot;Hawthorne, New York, USA&quot;</value>
            <value>&quot;Hershey, Pennsylvania, USA&quot;</value>
            <value>&quot;Hilton Head, South Carolina, USA&quot;</value>
            <value>&quot;Hilton Rye Town, New York, USA&quot;</value>
            <value>&quot;Hoboken, New Jersey, USA&quot;</value>
            <value>&quot;Hollywood, California, USA&quot;</value>
            <value>&quot;Honolulu, Haiwai, USA&quot;</value>
            <value>&quot;Honolulu, Hawaii, USA&quot;</value>
            <value>&quot;Horseshoe Bay, Texas, USA&quot;</value>
            <value>&quot;Hotel Sofitel, San Francisco Bay, USA&quot;</value>
            <value>&quot;Houston, Texas, USA&quot;</value>
            <value>&quot;Houston, USA&quot;</value>
            <value>&quot;Huntsville, Alabama, USA&quot;</value>
            <value>&quot;Idyllwild, California, USA&quot;</value>
            <value>&quot;Illinois, USA&quot;</value>
            <value>&quot;Indianapolis, Indiana, USA&quot;</value>
            <value>&quot;Iowa City, Iowa, USA&quot;</value>
            <value>&quot;Irvine, California, USA&quot;</value>
            <value>&quot;Ithaca, New York, USA&quot;</value>
            <value>&quot;Ithaca, USA&quot;</value>
            <value>&quot;Izmir, Kusadasi, Turkey&quot;</value>
            <value>&quot;Jacksonville, Florida, USA&quot;</value>
            <value>&quot;Jersey City, New Jersey, USA&quot;</value>
            <value>&quot;Jerusalem, Israel&quot;</value>
            <value>&quot;Johnstown, Pennsylvania, USA&quot;</value>
            <value>&quot;Kailua-Kona, Hawaii, USA&quot;</value>
            <value>&quot;Kalamazzo, Michigan, USA&quot;</value>
            <value>&quot;Kanas City, Missouri, USA&quot;</value>
            <value>&quot;Kansas City, Missouri, USA&quot;</value>
            <value>&quot;Kansas City, USA&quot;</value>
            <value>&quot;Kauai Island, Hawaii, USA&quot;</value>
            <value>&quot;Kauai, Hawaii, USA&quot;</value>
            <value>&quot;Kennesaw, Georgia, USA&quot;</value>
            <value>&quot;Key West, Florida, USA&quot;</value>
            <value>&quot;Kiawah Island, South Carolina, USA&quot;</value>
            <value>&quot;Kihei, Hawaii, USA&quot;</value>
            <value>&quot;Killington, Vermont, USA&quot;</value>
            <value>&quot;Knowledge Representation Chicago, Illinois, USA&quot;</value>
            <value>&quot;Knoxville, Tennessee, USA&quot;</value>
            <value>&quot;Kohala Coast, Hawaii, USA&quot;</value>
            <value>&quot;Kona, Hawaii, USA&quot;</value>
            <value>&quot;Kusadasi, Turkey&quot;</value>
            <value>&quot;Kusatsu, Japan&quot;</value>
            <value>&quot;La Jolla / San Diego, California, USA&quot;</value>
            <value>&quot;La Jolla, California, USA&quot;</value>
            <value>&quot;La Jolla/San Diego, California, USA&quot;</value>
            <value>&quot;Lafayette, Louisiana, USA&quot;</value>
            <value>&quot;Laguna Beach, California, USA&quot;</value>
            <value>&quot;Lake Arrowhead, California, USA&quot;</value>
            <value>&quot;Lake Buena Vista, Florida, USA&quot;</value>
            <value>&quot;Lake Placid, New York, USA&quot;</value>
            <value>&quot;Lake Tahoe, California, USA&quot;</value>
            <value>&quot;Lake Tahoe, Nevada, USA&quot;</value>
            <value>&quot;Langhorne, Pennsylvania, USA&quot;</value>
            <value>&quot;Las Cruces, New Mexico, USA&quot;</value>
            <value>&quot;Las Vegas Nevada, USA&quot;</value>
            <value>&quot;Las Vegas, Nevada, USA&quot;</value>
            <value>&quot;Las Vegas, USA&quot;</value>
            <value>&quot;Laurel Highlands, Pennsylvania, USA&quot;</value>
            <value>&quot;Lausanne, Switzerland&quot;</value>
            <value>&quot;Lawrence, Kansas, USA&quot;</value>
            <value>&quot;Lexington, Kentucky, USA&quot;</value>
            <value>&quot;Lihue (Kauai), Hawaii, USA&quot;</value>
            <value>&quot;Litchfield Park, Arizona, USA&quot;</value>
            <value>&quot;Little Rock, Arkansas, USA&quot;</value>
            <value>&quot;Long Beach, California, USA&quot;</value>
            <value>&quot;Long Island, New York, USA&quot;</value>
            <value>&quot;Los Altos, California, USA&quot;</value>
            <value>&quot;Los Angeles, California, USA&quot;</value>
            <value>&quot;Louisville, Kentucky, USA&quot;</value>
            <value>&quot;Lubbock, Texas USA&quot;</value>
            <value>&quot;Lubbock, Texas, USA&quot;</value>
            <value>&quot;MIT Stata Center, Massachusetts, USA&quot;</value>
            <value>&quot;Madison, Wisconsin, USA&quot;</value>
            <value>&quot;Malvern, Pennsylvania, USA&quot;</value>
            <value>&quot;Manhattan, Kansas, USA&quot;</value>
            <value>&quot;Marina Del Rey, California, USA&quot;</value>
            <value>&quot;Marina del Rey, California, USA&quot;</value>
            <value>&quot;Martha&apos;s Vineyard, Massachusetts, USA&quot;</value>
            <value>&quot;Massachusetts, USA&quot;</value>
            <value>&quot;Maui, Hawaii, USA&quot;</value>
            <value>&quot;Medford, Massachusetts, USA&quot;</value>
            <value>&quot;Medium Grain Parallelism Orlando, Florida, USA&quot;</value>
            <value>&quot;Melbourne Beach, Florida, USA&quot;</value>
            <value>&quot;Melbourne, Florida, USA&quot;</value>
            <value>&quot;Melno Park, California, USA&quot;</value>
            <value>&quot;Memphis, Tennessee, USA&quot;</value>
            <value>&quot;Mesa, Arizona, USA&quot;</value>
            <value>&quot;Miami Beach, Florida, USA&quot;</value>
            <value>&quot;Miami, Florida USA&quot;</value>
            <value>&quot;Miami, Florida, USA&quot;</value>
            <value>&quot;Miami, USA&quot;</value>
            <value>&quot;Miami/Ft. Lauderdale, Florida, USA&quot;</value>
            <value>&quot;Michigan, USA&quot;</value>
            <value>&quot;Milpitas, California, USA&quot;</value>
            <value>&quot;Milwaukee, Wisconsin, USA&quot;</value>
            <value>&quot;Minneapolis Minnesota, USA&quot;</value>
            <value>&quot;Minneapolis, Minnesota, USA&quot;</value>
            <value>&quot;Minneapolis/St.Paul, Minnesota, USA&quot;</value>
            <value>&quot;Monterey Bay, California, USA&quot;</value>
            <value>&quot;Monterey, California, USA&quot;</value>
            <value>&quot;Morro Bay, California, USA&quot;</value>
            <value>&quot;Mountain View, CA, USA&quot;</value>
            <value>&quot;Mountain View, California, USA&quot;</value>
            <value>&quot;Mt. Hood/Portland, Oregon, USA&quot;</value>
            <value>&quot;Mt. Pleasant, Michigan, USA&quot;</value>
            <value>&quot;Murray Hill, New Jersey, USA&quot;</value>
            <value>&quot;Myrtle Beach, South Carolina, USA&quot;</value>
            <value>&quot;Napa Valley, California, USA&quot;</value>
            <value>&quot;Napa, California, USA&quot;</value>
            <value>&quot;Nashville, Tennessee, USA&quot;</value>
            <value>&quot;Nashville, USA&quot;</value>
            <value>&quot;New Brunswick, New Jersey, USA&quot;</value>
            <value>&quot;New Haven, Connecticut, USA&quot;</value>
            <value>&quot;New Jerey, USA&quot;</value>
            <value>&quot;New Orleans, Louisiana, USA&quot;</value>
            <value>&quot;New Paltz, New York, USA&quot;</value>
            <value>&quot;New York City, New York, USA&quot;</value>
            <value>&quot;New York City, USA&quot;</value>
            <value>&quot;New York Metropolitan Area, USA&quot;</value>
            <value>&quot;New York, New York, USA&quot;</value>
            <value>&quot;New York, USA&quot;</value>
            <value>&quot;Newark, Delaware, USA&quot;</value>
            <value>&quot;Newark, New Jersey, USA&quot;</value>
            <value>&quot;Newport Beach, California, USA&quot;</value>
            <value>&quot;Newport, Rhode Island, USA&quot;</value>
            <value>&quot;Niagara Falls, New York, USA&quot;</value>
            <value>&quot;Norfolk, Virginia, USA&quot;</value>
            <value>&quot;Norman, Oklahoma, USA&quot;</value>
            <value>&quot;Northampton, Massachusetts, USA&quot;</value>
            <value>&quot;Notre Dame, Indiana, USA&quot;</value>
            <value>&quot;November 30-December 1, 2000, Lausanne, Switzerland&quot;</value>
            <value>&quot;Oak Brook, Illinois, USA&quot;</value>
            <value>&quot;Oakland, California, USA&quot;</value>
            <value>&quot;Olympia, Washington, USA&quot;</value>
            <value>&quot;Omaha, Nebraska, USA&quot;</value>
            <value>&quot;Orange County, California, USA&quot;</value>
            <value>&quot;Orcas Island, Washington, USA&quot;</value>
            <value>&quot;Orlando, Florida, USA&quot;</value>
            <value>&quot;Orlando, Forida, USA&quot;</value>
            <value>&quot;Orlando, USA&quot;</value>
            <value>&quot;Oxford, Mississippi, USA&quot;</value>
            <value>&quot;Pacific Grove, California, USA&quot;</value>
            <value>&quot;Palisades, New York, USA&quot;</value>
            <value>&quot;Palm Beach Gardens, Florida, USA&quot;</value>
            <value>&quot;Palm Beach, Florida, USA&quot;</value>
            <value>&quot;Palm Springs, California, USA&quot;</value>
            <value>&quot;Palo Alto, CAUSA&quot;</value>
            <value>&quot;Palo Alto, California, USA&quot;</value>
            <value>&quot;Park City, Utah, USA&quot;</value>
            <value>&quot;Pasadena, California, USA&quot;</value>
            <value>&quot;Pennsylvania, USA&quot;</value>
            <value>&quot;Pensacola Beach, Florida, USA&quot;</value>
            <value>&quot;Philadelphia, Pennsylvania, USA&quot;</value>
            <value>&quot;Philadephia, Pennsylvania, USA&quot;</value>
            <value>&quot;Phoenix, Arizona, USA&quot;</value>
            <value>&quot;Phoenix/Scottsdale, Arizona, USA&quot;</value>
            <value>&quot;Piscataway, New Jersey, USA&quot;</value>
            <value>&quot;Pittsburg, Pennsylvania, USA&quot;</value>
            <value>&quot;Pittsburgh, Pennsylvania, USA&quot;</value>
            <value>&quot;Pittsburgh, USA&quot;</value>
            <value>&quot;Plattsburgh, New York, USA&quot;</value>
            <value>&quot;Plymouth, Massachusetts, USA&quot;</value>
            <value>&quot;Port Jefferson, New York, USA&quot;</value>
            <value>&quot;Portlan, USA&quot;</value>
            <value>&quot;Portland, Maine, USA&quot;</value>
            <value>&quot;Portland, Oregon, USA&quot;</value>
            <value>&quot;Poultney, Vermont, USA&quot;</value>
            <value>&quot;Princeton, New Jersey, USA&quot;</value>
            <value>&quot;Princeton, USA&quot;</value>
            <value>&quot;Prospects Lake Guntersville, Alabama, USA&quot;</value>
            <value>&quot;Prospects Rensselaerville, New York, USA&quot;</value>
            <value>&quot;Providence, Rhode Island, USA&quot;</value>
            <value>&quot;Provincetown, Massachusetts, USA&quot;</value>
            <value>&quot;Raleigh, North Carolina, USA&quot;</value>
            <value>&quot;Raleigh, North-Carolina, USA&quot;</value>
            <value>&quot;Raleigh, USA&quot;</value>
            <value>&quot;Redmond, Washington, USA&quot;</value>
            <value>&quot;Redondo Beach, California, USA&quot;</value>
            <value>&quot;Redwood City, California, USA&quot;</value>
            <value>&quot;Redwood Shores, California, USA&quot;</value>
            <value>&quot;Reno, Nevada, USA&quot;</value>
            <value>&quot;Reno/Tahoe, Nevada, USA&quot;</value>
            <value>&quot;Rensselaerville, New York, USA&quot;</value>
            <value>&quot;Research Triangle Park, North Carolina, USA&quot;</value>
            <value>&quot;Richardson, Texas, USA&quot;</value>
            <value>&quot;Richmond, Virginia, USA&quot;</value>
            <value>&quot;Riverside, California, USA&quot;</value>
            <value>&quot;Roanoke, Virginia, USA&quot;</value>
            <value>&quot;Rochester, New York, USA&quot;</value>
            <value>&quot;Rockefeller University, New York, USA&quot;</value>
            <value>&quot;Rockport, Massachusetts, USA&quot;</value>
            <value>&quot;Rockville, Maryland, USA&quot;</value>
            <value>&quot;Rohnert Park, California, USA&quot;</value>
            <value>&quot;SUNY at Stony Brook, New York, USA&quot;</value>
            <value>&quot;Sacramento, California, USA&quot;</value>
            <value>&quot;Saint Louis, Missouri, USA&quot;</value>
            <value>&quot;Salem, Massachusetts, USA&quot;</value>
            <value>&quot;Salt Lake City, Utah, USA&quot;</value>
            <value>&quot;San Antonio, Texas, USA&quot;</value>
            <value>&quot;San Diego, California, USA&quot;</value>
            <value>&quot;San Diego, USA&quot;</value>
            <value>&quot;San Fancisco, California, USA&quot;</value>
            <value>&quot;San Francisco Bay, California, USA&quot;</value>
            <value>&quot;San Francisco International Airport, California, USA&quot;</value>
            <value>&quot;San Francisco, California, USA&quot;</value>
            <value>&quot;San Francisco, USA&quot;</value>
            <value>&quot;San Jose, Califorinia, USA&quot;</value>
            <value>&quot;San Jose, California, USA&quot;</value>
            <value>&quot;San José, California, USA&quot;</value>
            <value>&quot;San José, USA&quot;</value>
            <value>&quot;San Juan, Puerto Rico, USA&quot;</value>
            <value>&quot;San Mateo, California, USA&quot;</value>
            <value>&quot;Sanibel Island, Florida, USA&quot;</value>
            <value>&quot;Santa Barbara, California, USA&quot;</value>
            <value>&quot;Santa Clara, California, USA&quot;</value>
            <value>&quot;Santa Cruz, California, USA&quot;</value>
            <value>&quot;Santa Fe, New Mexico, USA&quot;</value>
            <value>&quot;Santa Monica, California, USA&quot;</value>
            <value>&quot;Saratoga Springs, New York, USA&quot;</value>
            <value>&quot;Savannah, Georgia, USA&quot;</value>
            <value>&quot;Schaumburg, Illinois, USA&quot;</value>
            <value>&quot;Schenectady, New York, USA&quot;</value>
            <value>&quot;Scottsdale, Arizona, USA&quot;</value>
            <value>&quot;Seaside, California, USA&quot;</value>
            <value>&quot;Seattle, USA&quot;</value>
            <value>&quot;Seattle, Washigton, USA&quot;</value>
            <value>&quot;Seattle, Washington, USA&quot;</value>
            <value>&quot;Seattle/Redmond, Washington, USA&quot;</value>
            <value>&quot;Sedona, Arizona, USA&quot;</value>
            <value>&quot;Shaker Heights, Ohio, USA&quot;</value>
            <value>&quot;Shelter Island, New York, USA&quot;</value>
            <value>&quot;Shepherdstown, West Virginia, USA&quot;</value>
            <value>&quot;Silicon Valley, California, USA&quot;</value>
            <value>&quot;Skokie, USA&quot;</value>
            <value>&quot;Skytop Lodge, Pennsylvania, USA&quot;</value>
            <value>&quot;Snow Bird, Utah, USA&quot;</value>
            <value>&quot;Snowbird, Utah, USA&quot;</value>
            <value>&quot;Sparks, Nevada, USA&quot;</value>
            <value>&quot;St. Augustine, Florida, USA&quot;</value>
            <value>&quot;St. Louis, Missouri, USA&quot;</value>
            <value>&quot;St. Paul, Minnesota, USA&quot;</value>
            <value>&quot;St. Thomas, Virgin Islands, USA&quot;</value>
            <value>&quot;Stamford, Connecticut, USA&quot;</value>
            <value>&quot;Stanford University, California, USA&quot;</value>
            <value>&quot;Stanford, California, USA&quot;</value>
            <value>&quot;State College, Pennsylvania, USA&quot;</value>
            <value>&quot;Statistical Database Management Cleveland, Ohio, USA&quot;</value>
            <value>&quot;Steamboat Springs, Colorado, USA&quot;</value>
            <value>&quot;Stevenson, Washington, USA&quot;</value>
            <value>&quot;Stony Brook, New York, USA&quot;</value>
            <value>&quot;Storrs, Connecticut, USA&quot;</value>
            <value>&quot;Sunnyvale, California, USA&quot;</value>
            <value>&quot;Surgery Chicago, USA&quot;</value>
            <value>&quot;Surgery San Francisco, USA&quot;</value>
            <value>&quot;Syracuse, New York, USA&quot;</value>
            <value>&quot;Tallahassee, Florida, USA&quot;</value>
            <value>&quot;Tampa, Florida, USA&quot;</value>
            <value>&quot;Tempe, Arizona, USA&quot;</value>
            <value>&quot;Texas, USA&quot;</value>
            <value>&quot;The City Center Hotel, Washington, USA&quot;</value>
            <value>&quot;The State University of New York at Buffalo, USA&quot;</value>
            <value>&quot;Their Performance Raleigh, North Carolina, USA&quot;</value>
            <value>&quot;Tiburon, California, USA&quot;</value>
            <value>&quot;Towson, Maryland, USA&quot;</value>
            <value>&quot;Troy, New York, USA&quot;</value>
            <value>&quot;Tucson, Arizona, USA&quot;</value>
            <value>&quot;Turtle Bay, Hawaii, USA&quot;</value>
            <value>&quot;USA&quot;</value>
            <value>&quot;USA, USA&quot;</value>
            <value>&quot;University Park, Pennsylvania, USA&quot;</value>
            <value>&quot;University of California, Irvine, USA&quot;</value>
            <value>&quot;University of California, Riverside, USA&quot;</value>
            <value>&quot;University of Michigan, USA&quot;</value>
            <value>&quot;Urbana Champaign, Illinois, USA&quot;</value>
            <value>&quot;Urbana, Illinois, USA&quot;</value>
            <value>&quot;Urbana-Champaign, Illinois, USA&quot;</value>
            <value>&quot;VI Boston, Massachusetts, USA&quot;</value>
            <value>&quot;Vail, Colorado, USA&quot;</value>
            <value>&quot;Vienna, Virginia, USA&quot;</value>
            <value>&quot;Virginia, USA&quot;</value>
            <value>&quot;Waikiki, Hawaii, USA&quot;</value>
            <value>&quot;Waikoloa, Hawaii, USA&quot;</value>
            <value>&quot;Waltham, Massachusetts, USA&quot;</value>
            <value>&quot;Warrenton, Virginia, USA&quot;</value>
            <value>&quot;Washington D.C., USA&quot;</value>
            <value>&quot;Washington DC, USA&quot;</value>
            <value>&quot;Washington, D.C, USA&quot;</value>
            <value>&quot;Washington, D.C. Metro Area, USA&quot;</value>
            <value>&quot;Washington, D.C., USA&quot;</value>
            <value>&quot;Washington, USA&quot;</value>
            <value>&quot;West Lafayette, Indiana, USA&quot;</value>
            <value>&quot;West Palm Beach, Florida, USA&quot;</value>
            <value>&quot;West Point, New York, USA&quot;</value>
            <value>&quot;White Plains, New York, USA&quot;</value>
            <value>&quot;Williamsburg, Virginia, USA&quot;</value>
            <value>&quot;Williamsburg, West Virginia, USA&quot;</value>
            <value>&quot;Williamstown, Massachusetts, USA&quot;</value>
            <value>&quot;Winston-Salem, North Carolina, USA&quot;</value>
            <value>&quot;Worcester, Massachusetts, USA&quot;</value>
            <value>&quot;Workshop Washington DC, USA&quot;</value>
            <value>&quot;Workshop. Portland, Oregon, USA&quot;</value>
            <value>&quot;Yorktown Heights, New York, USA&quot;</value>
            <value>&quot;Ypsilanti, Michigan, USA&quot;</value>
          </bin>
          <bin value='&quot;Advanced Information Management, Gyeongju, Korea&quot;'>
            <value>&quot;Advanced Information Management, Gyeongju, Korea&quot;</value>
            <value>&quot;Busan, Korea&quot;</value>
            <value>&quot;Catholic University of Daegu, Daegu, Korea&quot;</value>
            <value>&quot;Chenju, Korea&quot;</value>
            <value>&quot;Daegu, Korea&quot;</value>
            <value>&quot;Daejeon, Korea&quot;</value>
            <value>&quot;Gyeongju, Korea&quot;</value>
            <value>&quot;Haeundae Grand Hotel, Busan, Korea&quot;</value>
            <value>&quot;Incheon, Korea&quot;</value>
            <value>&quot;Jeju Island, Korea&quot;</value>
            <value>&quot;Korea&quot;</value>
            <value>&quot;Korean Bible University, Seoul, Korea&quot;</value>
            <value>&quot;Kyongju, Korea&quot;</value>
            <value>&quot;Pohang, Korea&quot;</value>
            <value>&quot;Ramada Plaza Jeju, Jeju-Island, Korea&quot;</value>
            <value>&quot;Seoul, Korea&quot;</value>
            <value>&quot;Seoul, Korea, September 11, 2006&quot;</value>
            <value>&quot;Suwon, Korea&quot;</value>
            <value>&quot;Taejon, Korea&quot;</value>
            <value>&quot;Technology, Daejeon, Korea&quot;</value>
            <value>&quot;Ulsan, Korea&quot;</value>
          </bin>
          <bin value='&quot;Beijing China&quot;'>
            <value>&quot;Beijing China&quot;</value>
            <value>&quot;Beijing, China&quot;</value>
            <value>&quot;Bejing, China&quot;</value>
            <value>&quot;Changchun, China&quot;</value>
            <value>&quot;Changchun, Jilin Province, China&quot;</value>
            <value>&quot;Changsha, China&quot;</value>
            <value>&quot;Changsha, Hunan, China&quot;</value>
            <value>&quot;Chengdu, China&quot;</value>
            <value>&quot;Chengdu, Sichuan, China&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;China, Beijing, China&quot;</value>
            <value>&quot;Chinese University of Hong Kong, Hong Kong, China&quot;</value>
            <value>&quot;Chongqing, China&quot;</value>
            <value>&quot;City University of Hong Kong, HKSAR, China&quot;</value>
            <value>&quot;Dalian, China&quot;</value>
            <value>&quot;Eton Hotel, Shanghai, China&quot;</value>
            <value>&quot;Ezhou, China&quot;</value>
            <value>&quot;Fudan University, Shanghai, China&quot;</value>
            <value>&quot;Fuzhou, China&quot;</value>
            <value>&quot;Guangzhou, China&quot;</value>
            <value>&quot;Guangzhou, P. R. China&quot;</value>
            <value>&quot;Guilin, China&quot;</value>
            <value>&quot;Guiyang, China&quot;</value>
            <value>&quot;Haikou, China&quot;</value>
            <value>&quot;Haikou, Hainan, China&quot;</value>
            <value>&quot;Hainan Island, China&quot;</value>
            <value>&quot;Hainan, China&quot;</value>
            <value>&quot;Hangzhou, China&quot;</value>
            <value>&quot;Harbin, China&quot;</value>
            <value>&quot;Harbin, Heilongjiang, China&quot;</value>
            <value>&quot;Hefei, China&quot;</value>
            <value>&quot;Hong Kong, China&quot;</value>
            <value>&quot;Hong Kong, China, Workshops&quot;</value>
            <value>&quot;Hong Kong, SAR, China&quot;</value>
            <value>&quot;Hong-Kong, China&quot;</value>
            <value>&quot;Hsinchu, Taiwan, Republic of China&quot;</value>
            <value>&quot;Huang Shan, China&quot;</value>
            <value>&quot;Huangshan, China&quot;</value>
            <value>&quot;Huangshi, China&quot;</value>
            <value>&quot;Huhehaote, China&quot;</value>
            <value>&quot;Huludao, China&quot;</value>
            <value>&quot;Jinan, China&quot;</value>
            <value>&quot;Jinan, Shandong, China&quot;</value>
            <value>&quot;Jinggangshan, China&quot;</value>
            <value>&quot;Jinhua, China&quot;</value>
            <value>&quot;Jiuzhaigou Valley, China&quot;</value>
            <value>&quot;Jiuzhaigou, China&quot;</value>
            <value>&quot;Kaifeng, China&quot;</value>
            <value>&quot;Knowledge Discovery, Tianjin, China&quot;</value>
            <value>&quot;Kowloon, Hong Kong, China&quot;</value>
            <value>&quot;Kunming, China&quot;</value>
            <value>&quot;Lanzhou, China&quot;</value>
            <value>&quot;Lanzhou, Gansu, China&quot;</value>
            <value>&quot;Liaoning, China&quot;</value>
            <value>&quot;Luoyang, Henan, China&quot;</value>
            <value>&quot;Lushan Mountain, Nanchang, China&quot;</value>
            <value>&quot;Macao, China&quot;</value>
            <value>&quot;Macau (S.A.R.), China&quot;</value>
            <value>&quot;Macau, China&quot;</value>
            <value>&quot;Nanchang, China&quot;</value>
            <value>&quot;Nanjing, China&quot;</value>
            <value>&quot;Nanjing, Jiangsu, China&quot;</value>
            <value>&quot;Nanyang Hotel, Xi&apos;an Jiaotong University, Xi&apos;an, China&quot;</value>
            <value>&quot;Qingdao, China&quot;</value>
            <value>&quot;Sanya, China&quot;</value>
            <value>&quot;Sanya, Hainan, China&quot;</value>
            <value>&quot;Sensor Networks, Wu Yi Mountain, Fujian, China&quot;</value>
            <value>&quot;Sensor Networks, Wuhan, China&quot;</value>
            <value>&quot;Shanghai Jiao Tong University, Shanghai, China&quot;</value>
            <value>&quot;Shanghai, China&quot;</value>
            <value>&quot;Shanghai, China, in conjunction with ICSE 2006&quot;</value>
            <value>&quot;Shenyang, China&quot;</value>
            <value>&quot;Shenzhen, China&quot;</value>
            <value>&quot;Southeast University, Nanjing, China&quot;</value>
            <value>&quot;Suzhou, China&quot;</value>
            <value>&quot;Taipei, Republic of China&quot;</value>
            <value>&quot;Taipei, Taiwan, Republic of China&quot;</value>
            <value>&quot;Taiyuan, China&quot;</value>
            <value>&quot;Tangshan, China&quot;</value>
            <value>&quot;Tianjian, China&quot;</value>
            <value>&quot;Tianjin, China&quot;</value>
            <value>&quot;Tools, Shanghai, China&quot;</value>
            <value>&quot;Tsinghua University, Beijing, China&quot;</value>
            <value>&quot;Urumchi, Xinjiang, China&quot;</value>
            <value>&quot;Weihai, China&quot;</value>
            <value>&quot;Wuhan, China&quot;</value>
            <value>&quot;Wuhan, Hubei, China&quot;</value>
            <value>&quot;Wuxi, China&quot;</value>
            <value>&quot;Wuyishan, China&quot;</value>
            <value>&quot;Xi&apos;An, China&quot;</value>
            <value>&quot;Xi&apos;an, China&quot;</value>
            <value>&quot;Xi&apos;an, Shanxi, China&quot;</value>
            <value>&quot;Xi-An, China&quot;</value>
            <value>&quot;Xiamen, China&quot;</value>
            <value>&quot;Xining, China&quot;</value>
            <value>&quot;Yantai, Shandong, China&quot;</value>
            <value>&quot;Yellow Mountain, China&quot;</value>
            <value>&quot;Zhang Jia Jie, Hunan, China&quot;</value>
            <value>&quot;Zhangjiajie, China&quot;</value>
            <value>&quot;Zhejiang University, Hangzhou, China&quot;</value>
            <value>&quot;Zhengzhou, China&quot;</value>
            <value>&quot;Zhuhai, China&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Adelphi, Maryland, USA&quot;' value='US' />
          <alias key='&quot;Advanced Information Management, Gyeongju, Korea&quot;' value='Korea' />
          <alias key='&quot;Beijing China&quot;' value='China' />
          <alias key='&quot;Österreichische Artificial-Intelligence-Tagung, Ottstein/Niederösterreich&quot;' value='Other' />
        </aliases>
      </column>
      <column datatype='string' name='[Where (copy)]' role='dimension' semantic-role='[geocodes-20111027].[name]' type='nominal'>
        <calculation class='tableau' formula='[Where]' />
      </column>
      <column datatype='string' name='[Where]' role='dimension' semantic-role='[geocodes-20111027].[name]' type='nominal'>
      </column>
      <column-instance column='[Begins]' derivation='Year' name='[yr:Begins:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Where)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Where]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (YEAR(Begins),Countries)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Begins:ok]' />
          <groupfilter function='level-members' level='[Where (copy) (group)]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='Z:\cs448b\Assignment3\src\data\conf#tab (conf.tab).tde' schema='Extract' tablename='Extract' update-time='10/27/2011 5:04:23 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' refresh-type='create' rows-inserted='13279' timestamp-start='2011-10-27 17:04:23.238000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Where (copy) (group)]' type='palette'>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;Beijing China&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#2ca02c'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;Adelphi, Maryland, USA&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#d62728'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;Österreichische Artificial-Intelligence-Tagung, Ottstein/Niederösterreich&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;Advanced Information Management, Gyeongju, Korea&quot;</value>
                </tuple>
              </bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Online' />
  </mapsources>
  <shared-views>
    <shared-view name='csv.40843.710587442132'>
      <datasources>
        <datasource caption='conf#tab (conf.tab)' name='csv.40843.710587442132' />
      </datasources>
      <datasource-dependencies datasource='csv.40843.710587442132'>
        <column datatype='datetime' name='[Begins]' role='dimension' type='ordinal'>
        </column>
        <column-instance column='[Begins]' derivation='Year' name='[yr:Begins:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[csv.40843.710587442132].[Action (Where)]'>
        <groupfilter function='level-members' level='[Where]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[csv.40843.710587442132].[yr:Begins:qk]' included-values='in-range'>
        <min>1004</min>
        <max>2010</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='conf#tab (conf.tab)' name='csv.40843.710587442132' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='csv.40843.710587442132'>
            <column datatype='datetime' name='[Begins]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Where]' role='dimension' semantic-role='[geocodes-20111027].[name]' type='nominal'>
            </column>
            <column-instance column='[Where]' derivation='None' name='[none:Where:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Begins]' derivation='Year' name='[yr:Begins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40843.710587442132].[Action (YEAR(Begins),Countries)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Begins:ok]' />
              <groupfilter function='level-members' level='[Where (copy) (group)]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.40843.710587442132].[Action (Where)]</column>
            <column>[csv.40843.710587442132].[yr:Begins:qk]</column>
            <column>[csv.40843.710587442132].[Action (YEAR(Begins),Countries)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.40843.710587442132].[sum:Number of Records:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_stub' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <groups>
                <column>[csv.40843.710587442132].[none:Where:nk]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Automatic'>
              <size column='[csv.40843.710587442132].[sum:Number of Records:qk]' />
              <color column='[csv.40843.710587442132].[sum:Number of Records:qk]' />
            </mark>
          </pane>
        </panes>
        <rows>[csv.40843.710587442132].[Latitude (generated)]</rows>
        <cols>[csv.40843.710587442132].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='conf#tab (conf.tab)' name='csv.40843.710587442132' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='csv.40843.710587442132'>
            <column datatype='datetime' name='[Begins]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[ConfID]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Where]' role='dimension' semantic-role='[geocodes-20111027].[name]' type='nominal'>
            </column>
            <column-instance column='[ConfID]' derivation='None' name='[none:ConfID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Where]' derivation='None' name='[none:Where:nk]' pivot='key' type='nominal' />
            <column-instance column='[Begins]' derivation='Year' name='[yr:Begins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40843.710587442132].[Action (YEAR(Begins),Countries)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Begins:ok]' />
              <groupfilter function='level-members' level='[Where (copy) (group)]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.40843.710587442132].[Action (Where)]</column>
            <column>[csv.40843.710587442132].[yr:Begins:qk]</column>
            <column>[csv.40843.710587442132].[Action (YEAR(Begins),Countries)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='um_stub' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Automatic'>
            </mark>
          </pane>
        </panes>
        <rows>[csv.40843.710587442132].[none:Where:nk]</rows>
        <cols>[csv.40843.710587442132].[none:ConfID:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='conf#tab (conf.tab)' name='csv.40843.710587442132' />
          </datasources>
          <datasource-dependencies datasource='csv.40843.710587442132'>
            <column datatype='datetime' name='[Begins]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Countries' datatype='string' name='[Where (copy) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Where (copy)]' default='&quot;Österreichische Artificial-Intelligence-Tagung, Ottstein/Niederösterreich&quot;'>
                <bin value='&quot;Adelphi, Maryland, USA&quot;'>
                  <value>&quot;Adelphi, Maryland, USA&quot;</value>
                  <value>&quot;Akron, Ohio, USA&quot;</value>
                  <value>&quot;Albany, New York, USA&quot;</value>
                  <value>&quot;Albuquerque, New Mexico, USA&quot;</value>
                  <value>&quot;Alexandria, Virginia, USA&quot;</value>
                  <value>&quot;Ames, Iowa, USA&quot;</value>
                  <value>&quot;Amherst, Massachusetts, USA&quot;</value>
                  <value>&quot;Anaheim Convention Center, California, USA&quot;</value>
                  <value>&quot;Anaheim, California, USA&quot;</value>
                  <value>&quot;Analysis Washington, D.C., USA&quot;</value>
                  <value>&quot;Anchorage, Alaska, USA&quot;</value>
                  <value>&quot;Ann Arbor, Michigan, USA&quot;</value>
                  <value>&quot;Annapolis, Maryland, USA&quot;</value>
                  <value>&quot;Argonne, Illinois, USA&quot;</value>
                  <value>&quot;Arlington, Texas, USA&quot;</value>
                  <value>&quot;Arlington, Virginia, USA&quot;</value>
                  <value>&quot;Asilomar, California, USA&quot;</value>
                  <value>&quot;Aspen Grove, Utah, USA&quot;</value>
                  <value>&quot;Athens, Georgia, USA&quot;</value>
                  <value>&quot;Atlanta, Georgia, USA&quot;</value>
                  <value>&quot;Atlanta, USA&quot;</value>
                  <value>&quot;Atlantic City, New Jersey, USA&quot;</value>
                  <value>&quot;Austin, Texas, USA&quot;</value>
                  <value>&quot;Baltimore, Maryland, USA&quot;</value>
                  <value>&quot;Bathesda, Maryland, USA&quot;</value>
                  <value>&quot;Baton Rouge, Louisiana, USA&quot;</value>
                  <value>&quot;Belfast, Maine, USA&quot;</value>
                  <value>&quot;Bellaire, Michigan, USA&quot;</value>
                  <value>&quot;Bellevue, Washington, USA&quot;</value>
                  <value>&quot;Berkeley Springs, West Virginia, USA&quot;</value>
                  <value>&quot;Berkeley, California, USA&quot;</value>
                  <value>&quot;Berleley, California, USA&quot;</value>
                  <value>&quot;Berleley/Oakland, California, USA&quot;</value>
                  <value>&quot;Bethesda, Maryland, USA&quot;</value>
                  <value>&quot;Bethlehem, Pennsylvania, USA&quot;</value>
                  <value>&quot;Beverly, Massachusetts, USA&quot;</value>
                  <value>&quot;Big Island, Hawaii, USA&quot;</value>
                  <value>&quot;Big Sky, Montana, USA&quot;</value>
                  <value>&quot;Birmingham, Alabama, USA&quot;</value>
                  <value>&quot;Blacksburg, Virginia, USA&quot;</value>
                  <value>&quot;Bloomington, Illinois, USA&quot;</value>
                  <value>&quot;Bloomington, Indiana, USA&quot;</value>
                  <value>&quot;Boca Raton, Florida, USA&quot;</value>
                  <value>&quot;Bodega Bay, California, USA&quot;</value>
                  <value>&quot;Boise, Idaho, USA&quot;</value>
                  <value>&quot;Bolton Landing, New York, USA&quot;</value>
                  <value>&quot;Boston, Massachusetts, USA&quot;</value>
                  <value>&quot;Boston, USA&quot;</value>
                  <value>&quot;Boulder, Colorado, USA&quot;</value>
                  <value>&quot;Breckenridge, Colorado, USA&quot;</value>
                  <value>&quot;Bridgeport, Connecticut, USA&quot;</value>
                  <value>&quot;Brooklyn, New York, USA&quot;</value>
                  <value>&quot;Buffalo, New York, USA&quot;</value>
                  <value>&quot;Burlington, Vermont, USA&quot;</value>
                  <value>&quot;California, USA&quot;</value>
                  <value>&quot;Callaway Gardens, Georgia, USA&quot;</value>
                  <value>&quot;Callicoon, New York, USA&quot;</value>
                  <value>&quot;Cambridge, Massachusetts, USA&quot;</value>
                  <value>&quot;Cambridge, USA&quot;</value>
                  <value>&quot;Cape Cod, Massachusetts, USA&quot;</value>
                  <value>&quot;Carson, California, USA&quot;</value>
                  <value>&quot;Center, Michigan, USA&quot;</value>
                  <value>&quot;Chantilly, Virginia, USA&quot;</value>
                  <value>&quot;Chapel Hill, North Carolina, USA&quot;</value>
                  <value>&quot;Charleston, South Carolina, USA&quot;</value>
                  <value>&quot;Charlotte, North Carolina, USA&quot;</value>
                  <value>&quot;Charlottesville, Virginia, USA&quot;</value>
                  <value>&quot;Chattanooga, Tennessee, USA&quot;</value>
                  <value>&quot;Chicago, Illinois, USA&quot;</value>
                  <value>&quot;Chicago, USA&quot;</value>
                  <value>&quot;Cincinnati, Kentucky, USA&quot;</value>
                  <value>&quot;Cincinnati, Ohio, USA&quot;</value>
                  <value>&quot;Claremont, California, USA&quot;</value>
                  <value>&quot;Clearwater Beach, Florida, USA&quot;</value>
                  <value>&quot;Clemson, South Carolina, USA&quot;</value>
                  <value>&quot;Cleveland, Ohio, USA&quot;</value>
                  <value>&quot;Cloudcroft, New Mexico, USA&quot;</value>
                  <value>&quot;Coconut Grove, Florida, USA&quot;</value>
                  <value>&quot;Coeur d&apos;Alene, Idaho, USA&quot;</value>
                  <value>&quot;College Park, Maryland, USA&quot;</value>
                  <value>&quot;College Station, Texas, USA&quot;</value>
                  <value>&quot;Colonial Williamsburg, Virginia, USA&quot;</value>
                  <value>&quot;Colorado Springs, Colorado, USA&quot;</value>
                  <value>&quot;Colorado Springs, USA&quot;</value>
                  <value>&quot;Colorado, USA&quot;</value>
                  <value>&quot;Columbia, Maryland, USA&quot;</value>
                  <value>&quot;Columbus, Ohio, USA&quot;</value>
                  <value>&quot;Control San Francisco, California, USA&quot;</value>
                  <value>&quot;Copper Mountain, Colorado, USA&quot;</value>
                  <value>&quot;Coral Gables, Florida, USA&quot;</value>
                  <value>&quot;Corvallis, Oregon, USA&quot;</value>
                  <value>&quot;Covington, Kentucky, USA&quot;</value>
                  <value>&quot;Cryptology Santa Barbara, California, USA&quot;</value>
                  <value>&quot;Cumberland Falls, Kentucky, USA&quot;</value>
                  <value>&quot;D.C., USA&quot;</value>
                  <value>&quot;Dallas / Richardson, Texas, USA&quot;</value>
                  <value>&quot;Dallas, Texas, USA&quot;</value>
                  <value>&quot;Dana Point, California, USA&quot;</value>
                  <value>&quot;Davis, California, USA&quot;</value>
                  <value>&quot;Dayton, Ohio, USA&quot;</value>
                  <value>&quot;Dearborn, Michigan, USA&quot;</value>
                  <value>&quot;Deerfield Beach, Florida, USA&quot;</value>
                  <value>&quot;Denver, Colorado, USA&quot;</value>
                  <value>&quot;Denver, USA&quot;</value>
                  <value>&quot;Destin, Florida, USA&quot;</value>
                  <value>&quot;Detroit, Michigan, USA&quot;</value>
                  <value>&quot;Durham, New Hampshire, USA&quot;</value>
                  <value>&quot;Durham, North Carolina, USA&quot;</value>
                  <value>&quot;East Lansing, Michigan, USA&quot;</value>
                  <value>&quot;East Stroudsburg, Pennsylvania, USA&quot;</value>
                  <value>&quot;Ecole Polytechnique Federale de Lausanne, Switzerland&quot;</value>
                  <value>&quot;El Paso, Texas, USA&quot;</value>
                  <value>&quot;Ellicottville, New York, USA&quot;</value>
                  <value>&quot;Entity-Relationship Approach New York, USA&quot;</value>
                  <value>&quot;Estes Park, Colorado, USA&quot;</value>
                  <value>&quot;Evanston, Illinois, USA&quot;</value>
                  <value>&quot;Fairfax, Virginia, USA&quot;</value>
                  <value>&quot;Falls Church, Virginia, USA&quot;</value>
                  <value>&quot;Fayetteville, Arkansas, USA&quot;</value>
                  <value>&quot;Flagstaff, Arizona, USA&quot;</value>
                  <value>&quot;Florida, Florida, USA&quot;</value>
                  <value>&quot;Florida, USA&quot;</value>
                  <value>&quot;Fort Collins, Colorado, USA&quot;</value>
                  <value>&quot;Fort Lauderdale, Florida, USA&quot;</value>
                  <value>&quot;Fort Worth, Texas, USA&quot;</value>
                  <value>&quot;Framingham, Massachusetts, USA&quot;</value>
                  <value>&quot;Ft. Collins, Colorado, USA&quot;</value>
                  <value>&quot;Ft. Lauderdale, Florida, USA&quot;</value>
                  <value>&quot;Gainesville, Florida, USA&quot;</value>
                  <value>&quot;Gaithersburg, Maryland, USA&quot;</value>
                  <value>&quot;Galtinburg, Tennessee, USA&quot;</value>
                  <value>&quot;Galveston, Texas, USA&quot;</value>
                  <value>&quot;Gazimagusa, North Cyprus&quot;</value>
                  <value>&quot;Georgia, Alabama, USA&quot;</value>
                  <value>&quot;Georgia, USA&quot;</value>
                  <value>&quot;Glenwood Springs, Colorado, USA&quot;</value>
                  <value>&quot;Graph Reduction Santa Fé, New Mexico, USA&quot;</value>
                  <value>&quot;Greenbelt, Maryland, USA&quot;</value>
                  <value>&quot;Greenville, South Carolina, USA&quot;</value>
                  <value>&quot;Guam, USA&quot;</value>
                  <value>&quot;Hampton, Virginia, USA&quot;</value>
                  <value>&quot;Hanover, New Hampshire, USA&quot;</value>
                  <value>&quot;Hawaii, USA&quot;</value>
                  <value>&quot;Hawthorne, New York, USA&quot;</value>
                  <value>&quot;Hershey, Pennsylvania, USA&quot;</value>
                  <value>&quot;Hilton Head, South Carolina, USA&quot;</value>
                  <value>&quot;Hilton Rye Town, New York, USA&quot;</value>
                  <value>&quot;Hoboken, New Jersey, USA&quot;</value>
                  <value>&quot;Hollywood, California, USA&quot;</value>
                  <value>&quot;Honolulu, Haiwai, USA&quot;</value>
                  <value>&quot;Honolulu, Hawaii, USA&quot;</value>
                  <value>&quot;Horseshoe Bay, Texas, USA&quot;</value>
                  <value>&quot;Hotel Sofitel, San Francisco Bay, USA&quot;</value>
                  <value>&quot;Houston, Texas, USA&quot;</value>
                  <value>&quot;Houston, USA&quot;</value>
                  <value>&quot;Huntsville, Alabama, USA&quot;</value>
                  <value>&quot;Idyllwild, California, USA&quot;</value>
                  <value>&quot;Illinois, USA&quot;</value>
                  <value>&quot;Indianapolis, Indiana, USA&quot;</value>
                  <value>&quot;Iowa City, Iowa, USA&quot;</value>
                  <value>&quot;Irvine, California, USA&quot;</value>
                  <value>&quot;Ithaca, New York, USA&quot;</value>
                  <value>&quot;Ithaca, USA&quot;</value>
                  <value>&quot;Izmir, Kusadasi, Turkey&quot;</value>
                  <value>&quot;Jacksonville, Florida, USA&quot;</value>
                  <value>&quot;Jersey City, New Jersey, USA&quot;</value>
                  <value>&quot;Jerusalem, Israel&quot;</value>
                  <value>&quot;Johnstown, Pennsylvania, USA&quot;</value>
                  <value>&quot;Kailua-Kona, Hawaii, USA&quot;</value>
                  <value>&quot;Kalamazzo, Michigan, USA&quot;</value>
                  <value>&quot;Kanas City, Missouri, USA&quot;</value>
                  <value>&quot;Kansas City, Missouri, USA&quot;</value>
                  <value>&quot;Kansas City, USA&quot;</value>
                  <value>&quot;Kauai Island, Hawaii, USA&quot;</value>
                  <value>&quot;Kauai, Hawaii, USA&quot;</value>
                  <value>&quot;Kennesaw, Georgia, USA&quot;</value>
                  <value>&quot;Key West, Florida, USA&quot;</value>
                  <value>&quot;Kiawah Island, South Carolina, USA&quot;</value>
                  <value>&quot;Kihei, Hawaii, USA&quot;</value>
                  <value>&quot;Killington, Vermont, USA&quot;</value>
                  <value>&quot;Knowledge Representation Chicago, Illinois, USA&quot;</value>
                  <value>&quot;Knoxville, Tennessee, USA&quot;</value>
                  <value>&quot;Kohala Coast, Hawaii, USA&quot;</value>
                  <value>&quot;Kona, Hawaii, USA&quot;</value>
                  <value>&quot;Kusadasi, Turkey&quot;</value>
                  <value>&quot;Kusatsu, Japan&quot;</value>
                  <value>&quot;La Jolla / San Diego, California, USA&quot;</value>
                  <value>&quot;La Jolla, California, USA&quot;</value>
                  <value>&quot;La Jolla/San Diego, California, USA&quot;</value>
                  <value>&quot;Lafayette, Louisiana, USA&quot;</value>
                  <value>&quot;Laguna Beach, California, USA&quot;</value>
                  <value>&quot;Lake Arrowhead, California, USA&quot;</value>
                  <value>&quot;Lake Buena Vista, Florida, USA&quot;</value>
                  <value>&quot;Lake Placid, New York, USA&quot;</value>
                  <value>&quot;Lake Tahoe, California, USA&quot;</value>
                  <value>&quot;Lake Tahoe, Nevada, USA&quot;</value>
                  <value>&quot;Langhorne, Pennsylvania, USA&quot;</value>
                  <value>&quot;Las Cruces, New Mexico, USA&quot;</value>
                  <value>&quot;Las Vegas Nevada, USA&quot;</value>
                  <value>&quot;Las Vegas, Nevada, USA&quot;</value>
                  <value>&quot;Las Vegas, USA&quot;</value>
                  <value>&quot;Laurel Highlands, Pennsylvania, USA&quot;</value>
                  <value>&quot;Lausanne, Switzerland&quot;</value>
                  <value>&quot;Lawrence, Kansas, USA&quot;</value>
                  <value>&quot;Lexington, Kentucky, USA&quot;</value>
                  <value>&quot;Lihue (Kauai), Hawaii, USA&quot;</value>
                  <value>&quot;Litchfield Park, Arizona, USA&quot;</value>
                  <value>&quot;Little Rock, Arkansas, USA&quot;</value>
                  <value>&quot;Long Beach, California, USA&quot;</value>
                  <value>&quot;Long Island, New York, USA&quot;</value>
                  <value>&quot;Los Altos, California, USA&quot;</value>
                  <value>&quot;Los Angeles, California, USA&quot;</value>
                  <value>&quot;Louisville, Kentucky, USA&quot;</value>
                  <value>&quot;Lubbock, Texas USA&quot;</value>
                  <value>&quot;Lubbock, Texas, USA&quot;</value>
                  <value>&quot;MIT Stata Center, Massachusetts, USA&quot;</value>
                  <value>&quot;Madison, Wisconsin, USA&quot;</value>
                  <value>&quot;Malvern, Pennsylvania, USA&quot;</value>
                  <value>&quot;Manhattan, Kansas, USA&quot;</value>
                  <value>&quot;Marina Del Rey, California, USA&quot;</value>
                  <value>&quot;Marina del Rey, California, USA&quot;</value>
                  <value>&quot;Martha&apos;s Vineyard, Massachusetts, USA&quot;</value>
                  <value>&quot;Massachusetts, USA&quot;</value>
                  <value>&quot;Maui, Hawaii, USA&quot;</value>
                  <value>&quot;Medford, Massachusetts, USA&quot;</value>
                  <value>&quot;Medium Grain Parallelism Orlando, Florida, USA&quot;</value>
                  <value>&quot;Melbourne Beach, Florida, USA&quot;</value>
                  <value>&quot;Melbourne, Florida, USA&quot;</value>
                  <value>&quot;Melno Park, California, USA&quot;</value>
                  <value>&quot;Memphis, Tennessee, USA&quot;</value>
                  <value>&quot;Mesa, Arizona, USA&quot;</value>
                  <value>&quot;Miami Beach, Florida, USA&quot;</value>
                  <value>&quot;Miami, Florida USA&quot;</value>
                  <value>&quot;Miami, Florida, USA&quot;</value>
                  <value>&quot;Miami, USA&quot;</value>
                  <value>&quot;Miami/Ft. Lauderdale, Florida, USA&quot;</value>
                  <value>&quot;Michigan, USA&quot;</value>
                  <value>&quot;Milpitas, California, USA&quot;</value>
                  <value>&quot;Milwaukee, Wisconsin, USA&quot;</value>
                  <value>&quot;Minneapolis Minnesota, USA&quot;</value>
                  <value>&quot;Minneapolis, Minnesota, USA&quot;</value>
                  <value>&quot;Minneapolis/St.Paul, Minnesota, USA&quot;</value>
                  <value>&quot;Monterey Bay, California, USA&quot;</value>
                  <value>&quot;Monterey, California, USA&quot;</value>
                  <value>&quot;Morro Bay, California, USA&quot;</value>
                  <value>&quot;Mountain View, CA, USA&quot;</value>
                  <value>&quot;Mountain View, California, USA&quot;</value>
                  <value>&quot;Mt. Hood/Portland, Oregon, USA&quot;</value>
                  <value>&quot;Mt. Pleasant, Michigan, USA&quot;</value>
                  <value>&quot;Murray Hill, New Jersey, USA&quot;</value>
                  <value>&quot;Myrtle Beach, South Carolina, USA&quot;</value>
                  <value>&quot;Napa Valley, California, USA&quot;</value>
                  <value>&quot;Napa, California, USA&quot;</value>
                  <value>&quot;Nashville, Tennessee, USA&quot;</value>
                  <value>&quot;Nashville, USA&quot;</value>
                  <value>&quot;New Brunswick, New Jersey, USA&quot;</value>
                  <value>&quot;New Haven, Connecticut, USA&quot;</value>
                  <value>&quot;New Jerey, USA&quot;</value>
                  <value>&quot;New Orleans, Louisiana, USA&quot;</value>
                  <value>&quot;New Paltz, New York, USA&quot;</value>
                  <value>&quot;New York City, New York, USA&quot;</value>
                  <value>&quot;New York City, USA&quot;</value>
                  <value>&quot;New York Metropolitan Area, USA&quot;</value>
                  <value>&quot;New York, New York, USA&quot;</value>
                  <value>&quot;New York, USA&quot;</value>
                  <value>&quot;Newark, Delaware, USA&quot;</value>
                  <value>&quot;Newark, New Jersey, USA&quot;</value>
                  <value>&quot;Newport Beach, California, USA&quot;</value>
                  <value>&quot;Newport, Rhode Island, USA&quot;</value>
                  <value>&quot;Niagara Falls, New York, USA&quot;</value>
                  <value>&quot;Norfolk, Virginia, USA&quot;</value>
                  <value>&quot;Norman, Oklahoma, USA&quot;</value>
                  <value>&quot;Northampton, Massachusetts, USA&quot;</value>
                  <value>&quot;Notre Dame, Indiana, USA&quot;</value>
                  <value>&quot;November 30-December 1, 2000, Lausanne, Switzerland&quot;</value>
                  <value>&quot;Oak Brook, Illinois, USA&quot;</value>
                  <value>&quot;Oakland, California, USA&quot;</value>
                  <value>&quot;Olympia, Washington, USA&quot;</value>
                  <value>&quot;Omaha, Nebraska, USA&quot;</value>
                  <value>&quot;Orange County, California, USA&quot;</value>
                  <value>&quot;Orcas Island, Washington, USA&quot;</value>
                  <value>&quot;Orlando, Florida, USA&quot;</value>
                  <value>&quot;Orlando, Forida, USA&quot;</value>
                  <value>&quot;Orlando, USA&quot;</value>
                  <value>&quot;Oxford, Mississippi, USA&quot;</value>
                  <value>&quot;Pacific Grove, California, USA&quot;</value>
                  <value>&quot;Palisades, New York, USA&quot;</value>
                  <value>&quot;Palm Beach Gardens, Florida, USA&quot;</value>
                  <value>&quot;Palm Beach, Florida, USA&quot;</value>
                  <value>&quot;Palm Springs, California, USA&quot;</value>
                  <value>&quot;Palo Alto, CAUSA&quot;</value>
                  <value>&quot;Palo Alto, California, USA&quot;</value>
                  <value>&quot;Park City, Utah, USA&quot;</value>
                  <value>&quot;Pasadena, California, USA&quot;</value>
                  <value>&quot;Pennsylvania, USA&quot;</value>
                  <value>&quot;Pensacola Beach, Florida, USA&quot;</value>
                  <value>&quot;Philadelphia, Pennsylvania, USA&quot;</value>
                  <value>&quot;Philadephia, Pennsylvania, USA&quot;</value>
                  <value>&quot;Phoenix, Arizona, USA&quot;</value>
                  <value>&quot;Phoenix/Scottsdale, Arizona, USA&quot;</value>
                  <value>&quot;Piscataway, New Jersey, USA&quot;</value>
                  <value>&quot;Pittsburg, Pennsylvania, USA&quot;</value>
                  <value>&quot;Pittsburgh, Pennsylvania, USA&quot;</value>
                  <value>&quot;Pittsburgh, USA&quot;</value>
                  <value>&quot;Plattsburgh, New York, USA&quot;</value>
                  <value>&quot;Plymouth, Massachusetts, USA&quot;</value>
                  <value>&quot;Port Jefferson, New York, USA&quot;</value>
                  <value>&quot;Portlan, USA&quot;</value>
                  <value>&quot;Portland, Maine, USA&quot;</value>
                  <value>&quot;Portland, Oregon, USA&quot;</value>
                  <value>&quot;Poultney, Vermont, USA&quot;</value>
                  <value>&quot;Princeton, New Jersey, USA&quot;</value>
                  <value>&quot;Princeton, USA&quot;</value>
                  <value>&quot;Prospects Lake Guntersville, Alabama, USA&quot;</value>
                  <value>&quot;Prospects Rensselaerville, New York, USA&quot;</value>
                  <value>&quot;Providence, Rhode Island, USA&quot;</value>
                  <value>&quot;Provincetown, Massachusetts, USA&quot;</value>
                  <value>&quot;Raleigh, North Carolina, USA&quot;</value>
                  <value>&quot;Raleigh, North-Carolina, USA&quot;</value>
                  <value>&quot;Raleigh, USA&quot;</value>
                  <value>&quot;Redmond, Washington, USA&quot;</value>
                  <value>&quot;Redondo Beach, California, USA&quot;</value>
                  <value>&quot;Redwood City, California, USA&quot;</value>
                  <value>&quot;Redwood Shores, California, USA&quot;</value>
                  <value>&quot;Reno, Nevada, USA&quot;</value>
                  <value>&quot;Reno/Tahoe, Nevada, USA&quot;</value>
                  <value>&quot;Rensselaerville, New York, USA&quot;</value>
                  <value>&quot;Research Triangle Park, North Carolina, USA&quot;</value>
                  <value>&quot;Richardson, Texas, USA&quot;</value>
                  <value>&quot;Richmond, Virginia, USA&quot;</value>
                  <value>&quot;Riverside, California, USA&quot;</value>
                  <value>&quot;Roanoke, Virginia, USA&quot;</value>
                  <value>&quot;Rochester, New York, USA&quot;</value>
                  <value>&quot;Rockefeller University, New York, USA&quot;</value>
                  <value>&quot;Rockport, Massachusetts, USA&quot;</value>
                  <value>&quot;Rockville, Maryland, USA&quot;</value>
                  <value>&quot;Rohnert Park, California, USA&quot;</value>
                  <value>&quot;SUNY at Stony Brook, New York, USA&quot;</value>
                  <value>&quot;Sacramento, California, USA&quot;</value>
                  <value>&quot;Saint Louis, Missouri, USA&quot;</value>
                  <value>&quot;Salem, Massachusetts, USA&quot;</value>
                  <value>&quot;Salt Lake City, Utah, USA&quot;</value>
                  <value>&quot;San Antonio, Texas, USA&quot;</value>
                  <value>&quot;San Diego, California, USA&quot;</value>
                  <value>&quot;San Diego, USA&quot;</value>
                  <value>&quot;San Fancisco, California, USA&quot;</value>
                  <value>&quot;San Francisco Bay, California, USA&quot;</value>
                  <value>&quot;San Francisco International Airport, California, USA&quot;</value>
                  <value>&quot;San Francisco, California, USA&quot;</value>
                  <value>&quot;San Francisco, USA&quot;</value>
                  <value>&quot;San Jose, Califorinia, USA&quot;</value>
                  <value>&quot;San Jose, California, USA&quot;</value>
                  <value>&quot;San José, California, USA&quot;</value>
                  <value>&quot;San José, USA&quot;</value>
                  <value>&quot;San Juan, Puerto Rico, USA&quot;</value>
                  <value>&quot;San Mateo, California, USA&quot;</value>
                  <value>&quot;Sanibel Island, Florida, USA&quot;</value>
                  <value>&quot;Santa Barbara, California, USA&quot;</value>
                  <value>&quot;Santa Clara, California, USA&quot;</value>
                  <value>&quot;Santa Cruz, California, USA&quot;</value>
                  <value>&quot;Santa Fe, New Mexico, USA&quot;</value>
                  <value>&quot;Santa Monica, California, USA&quot;</value>
                  <value>&quot;Saratoga Springs, New York, USA&quot;</value>
                  <value>&quot;Savannah, Georgia, USA&quot;</value>
                  <value>&quot;Schaumburg, Illinois, USA&quot;</value>
                  <value>&quot;Schenectady, New York, USA&quot;</value>
                  <value>&quot;Scottsdale, Arizona, USA&quot;</value>
                  <value>&quot;Seaside, California, USA&quot;</value>
                  <value>&quot;Seattle, USA&quot;</value>
                  <value>&quot;Seattle, Washigton, USA&quot;</value>
                  <value>&quot;Seattle, Washington, USA&quot;</value>
                  <value>&quot;Seattle/Redmond, Washington, USA&quot;</value>
                  <value>&quot;Sedona, Arizona, USA&quot;</value>
                  <value>&quot;Shaker Heights, Ohio, USA&quot;</value>
                  <value>&quot;Shelter Island, New York, USA&quot;</value>
                  <value>&quot;Shepherdstown, West Virginia, USA&quot;</value>
                  <value>&quot;Silicon Valley, California, USA&quot;</value>
                  <value>&quot;Skokie, USA&quot;</value>
                  <value>&quot;Skytop Lodge, Pennsylvania, USA&quot;</value>
                  <value>&quot;Snow Bird, Utah, USA&quot;</value>
                  <value>&quot;Snowbird, Utah, USA&quot;</value>
                  <value>&quot;Sparks, Nevada, USA&quot;</value>
                  <value>&quot;St. Augustine, Florida, USA&quot;</value>
                  <value>&quot;St. Louis, Missouri, USA&quot;</value>
                  <value>&quot;St. Paul, Minnesota, USA&quot;</value>
                  <value>&quot;St. Thomas, Virgin Islands, USA&quot;</value>
                  <value>&quot;Stamford, Connecticut, USA&quot;</value>
                  <value>&quot;Stanford University, California, USA&quot;</value>
                  <value>&quot;Stanford, California, USA&quot;</value>
                  <value>&quot;State College, Pennsylvania, USA&quot;</value>
                  <value>&quot;Statistical Database Management Cleveland, Ohio, USA&quot;</value>
                  <value>&quot;Steamboat Springs, Colorado, USA&quot;</value>
                  <value>&quot;Stevenson, Washington, USA&quot;</value>
                  <value>&quot;Stony Brook, New York, USA&quot;</value>
                  <value>&quot;Storrs, Connecticut, USA&quot;</value>
                  <value>&quot;Sunnyvale, California, USA&quot;</value>
                  <value>&quot;Surgery Chicago, USA&quot;</value>
                  <value>&quot;Surgery San Francisco, USA&quot;</value>
                  <value>&quot;Syracuse, New York, USA&quot;</value>
                  <value>&quot;Tallahassee, Florida, USA&quot;</value>
                  <value>&quot;Tampa, Florida, USA&quot;</value>
                  <value>&quot;Tempe, Arizona, USA&quot;</value>
                  <value>&quot;Texas, USA&quot;</value>
                  <value>&quot;The City Center Hotel, Washington, USA&quot;</value>
                  <value>&quot;The State University of New York at Buffalo, USA&quot;</value>
                  <value>&quot;Their Performance Raleigh, North Carolina, USA&quot;</value>
                  <value>&quot;Tiburon, California, USA&quot;</value>
                  <value>&quot;Towson, Maryland, USA&quot;</value>
                  <value>&quot;Troy, New York, USA&quot;</value>
                  <value>&quot;Tucson, Arizona, USA&quot;</value>
                  <value>&quot;Turtle Bay, Hawaii, USA&quot;</value>
                  <value>&quot;USA&quot;</value>
                  <value>&quot;USA, USA&quot;</value>
                  <value>&quot;University Park, Pennsylvania, USA&quot;</value>
                  <value>&quot;University of California, Irvine, USA&quot;</value>
                  <value>&quot;University of California, Riverside, USA&quot;</value>
                  <value>&quot;University of Michigan, USA&quot;</value>
                  <value>&quot;Urbana Champaign, Illinois, USA&quot;</value>
                  <value>&quot;Urbana, Illinois, USA&quot;</value>
                  <value>&quot;Urbana-Champaign, Illinois, USA&quot;</value>
                  <value>&quot;VI Boston, Massachusetts, USA&quot;</value>
                  <value>&quot;Vail, Colorado, USA&quot;</value>
                  <value>&quot;Vienna, Virginia, USA&quot;</value>
                  <value>&quot;Virginia, USA&quot;</value>
                  <value>&quot;Waikiki, Hawaii, USA&quot;</value>
                  <value>&quot;Waikoloa, Hawaii, USA&quot;</value>
                  <value>&quot;Waltham, Massachusetts, USA&quot;</value>
                  <value>&quot;Warrenton, Virginia, USA&quot;</value>
                  <value>&quot;Washington D.C., USA&quot;</value>
                  <value>&quot;Washington DC, USA&quot;</value>
                  <value>&quot;Washington, D.C, USA&quot;</value>
                  <value>&quot;Washington, D.C. Metro Area, USA&quot;</value>
                  <value>&quot;Washington, D.C., USA&quot;</value>
                  <value>&quot;Washington, USA&quot;</value>
                  <value>&quot;West Lafayette, Indiana, USA&quot;</value>
                  <value>&quot;West Palm Beach, Florida, USA&quot;</value>
                  <value>&quot;West Point, New York, USA&quot;</value>
                  <value>&quot;White Plains, New York, USA&quot;</value>
                  <value>&quot;Williamsburg, Virginia, USA&quot;</value>
                  <value>&quot;Williamsburg, West Virginia, USA&quot;</value>
                  <value>&quot;Williamstown, Massachusetts, USA&quot;</value>
                  <value>&quot;Winston-Salem, North Carolina, USA&quot;</value>
                  <value>&quot;Worcester, Massachusetts, USA&quot;</value>
                  <value>&quot;Workshop Washington DC, USA&quot;</value>
                  <value>&quot;Workshop. Portland, Oregon, USA&quot;</value>
                  <value>&quot;Yorktown Heights, New York, USA&quot;</value>
                  <value>&quot;Ypsilanti, Michigan, USA&quot;</value>
                </bin>
                <bin value='&quot;Advanced Information Management, Gyeongju, Korea&quot;'>
                  <value>&quot;Advanced Information Management, Gyeongju, Korea&quot;</value>
                  <value>&quot;Busan, Korea&quot;</value>
                  <value>&quot;Catholic University of Daegu, Daegu, Korea&quot;</value>
                  <value>&quot;Chenju, Korea&quot;</value>
                  <value>&quot;Daegu, Korea&quot;</value>
                  <value>&quot;Daejeon, Korea&quot;</value>
                  <value>&quot;Gyeongju, Korea&quot;</value>
                  <value>&quot;Haeundae Grand Hotel, Busan, Korea&quot;</value>
                  <value>&quot;Incheon, Korea&quot;</value>
                  <value>&quot;Jeju Island, Korea&quot;</value>
                  <value>&quot;Korea&quot;</value>
                  <value>&quot;Korean Bible University, Seoul, Korea&quot;</value>
                  <value>&quot;Kyongju, Korea&quot;</value>
                  <value>&quot;Pohang, Korea&quot;</value>
                  <value>&quot;Ramada Plaza Jeju, Jeju-Island, Korea&quot;</value>
                  <value>&quot;Seoul, Korea&quot;</value>
                  <value>&quot;Seoul, Korea, September 11, 2006&quot;</value>
                  <value>&quot;Suwon, Korea&quot;</value>
                  <value>&quot;Taejon, Korea&quot;</value>
                  <value>&quot;Technology, Daejeon, Korea&quot;</value>
                  <value>&quot;Ulsan, Korea&quot;</value>
                </bin>
                <bin value='&quot;Beijing China&quot;'>
                  <value>&quot;Beijing China&quot;</value>
                  <value>&quot;Beijing, China&quot;</value>
                  <value>&quot;Bejing, China&quot;</value>
                  <value>&quot;Changchun, China&quot;</value>
                  <value>&quot;Changchun, Jilin Province, China&quot;</value>
                  <value>&quot;Changsha, China&quot;</value>
                  <value>&quot;Changsha, Hunan, China&quot;</value>
                  <value>&quot;Chengdu, China&quot;</value>
                  <value>&quot;Chengdu, Sichuan, China&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;China, Beijing, China&quot;</value>
                  <value>&quot;Chinese University of Hong Kong, Hong Kong, China&quot;</value>
                  <value>&quot;Chongqing, China&quot;</value>
                  <value>&quot;City University of Hong Kong, HKSAR, China&quot;</value>
                  <value>&quot;Dalian, China&quot;</value>
                  <value>&quot;Eton Hotel, Shanghai, China&quot;</value>
                  <value>&quot;Ezhou, China&quot;</value>
                  <value>&quot;Fudan University, Shanghai, China&quot;</value>
                  <value>&quot;Fuzhou, China&quot;</value>
                  <value>&quot;Guangzhou, China&quot;</value>
                  <value>&quot;Guangzhou, P. R. China&quot;</value>
                  <value>&quot;Guilin, China&quot;</value>
                  <value>&quot;Guiyang, China&quot;</value>
                  <value>&quot;Haikou, China&quot;</value>
                  <value>&quot;Haikou, Hainan, China&quot;</value>
                  <value>&quot;Hainan Island, China&quot;</value>
                  <value>&quot;Hainan, China&quot;</value>
                  <value>&quot;Hangzhou, China&quot;</value>
                  <value>&quot;Harbin, China&quot;</value>
                  <value>&quot;Harbin, Heilongjiang, China&quot;</value>
                  <value>&quot;Hefei, China&quot;</value>
                  <value>&quot;Hong Kong, China&quot;</value>
                  <value>&quot;Hong Kong, China, Workshops&quot;</value>
                  <value>&quot;Hong Kong, SAR, China&quot;</value>
                  <value>&quot;Hong-Kong, China&quot;</value>
                  <value>&quot;Hsinchu, Taiwan, Republic of China&quot;</value>
                  <value>&quot;Huang Shan, China&quot;</value>
                  <value>&quot;Huangshan, China&quot;</value>
                  <value>&quot;Huangshi, China&quot;</value>
                  <value>&quot;Huhehaote, China&quot;</value>
                  <value>&quot;Huludao, China&quot;</value>
                  <value>&quot;Jinan, China&quot;</value>
                  <value>&quot;Jinan, Shandong, China&quot;</value>
                  <value>&quot;Jinggangshan, China&quot;</value>
                  <value>&quot;Jinhua, China&quot;</value>
                  <value>&quot;Jiuzhaigou Valley, China&quot;</value>
                  <value>&quot;Jiuzhaigou, China&quot;</value>
                  <value>&quot;Kaifeng, China&quot;</value>
                  <value>&quot;Knowledge Discovery, Tianjin, China&quot;</value>
                  <value>&quot;Kowloon, Hong Kong, China&quot;</value>
                  <value>&quot;Kunming, China&quot;</value>
                  <value>&quot;Lanzhou, China&quot;</value>
                  <value>&quot;Lanzhou, Gansu, China&quot;</value>
                  <value>&quot;Liaoning, China&quot;</value>
                  <value>&quot;Luoyang, Henan, China&quot;</value>
                  <value>&quot;Lushan Mountain, Nanchang, China&quot;</value>
                  <value>&quot;Macao, China&quot;</value>
                  <value>&quot;Macau (S.A.R.), China&quot;</value>
                  <value>&quot;Macau, China&quot;</value>
                  <value>&quot;Nanchang, China&quot;</value>
                  <value>&quot;Nanjing, China&quot;</value>
                  <value>&quot;Nanjing, Jiangsu, China&quot;</value>
                  <value>&quot;Nanyang Hotel, Xi&apos;an Jiaotong University, Xi&apos;an, China&quot;</value>
                  <value>&quot;Qingdao, China&quot;</value>
                  <value>&quot;Sanya, China&quot;</value>
                  <value>&quot;Sanya, Hainan, China&quot;</value>
                  <value>&quot;Sensor Networks, Wu Yi Mountain, Fujian, China&quot;</value>
                  <value>&quot;Sensor Networks, Wuhan, China&quot;</value>
                  <value>&quot;Shanghai Jiao Tong University, Shanghai, China&quot;</value>
                  <value>&quot;Shanghai, China&quot;</value>
                  <value>&quot;Shanghai, China, in conjunction with ICSE 2006&quot;</value>
                  <value>&quot;Shenyang, China&quot;</value>
                  <value>&quot;Shenzhen, China&quot;</value>
                  <value>&quot;Southeast University, Nanjing, China&quot;</value>
                  <value>&quot;Suzhou, China&quot;</value>
                  <value>&quot;Taipei, Republic of China&quot;</value>
                  <value>&quot;Taipei, Taiwan, Republic of China&quot;</value>
                  <value>&quot;Taiyuan, China&quot;</value>
                  <value>&quot;Tangshan, China&quot;</value>
                  <value>&quot;Tianjian, China&quot;</value>
                  <value>&quot;Tianjin, China&quot;</value>
                  <value>&quot;Tools, Shanghai, China&quot;</value>
                  <value>&quot;Tsinghua University, Beijing, China&quot;</value>
                  <value>&quot;Urumchi, Xinjiang, China&quot;</value>
                  <value>&quot;Weihai, China&quot;</value>
                  <value>&quot;Wuhan, China&quot;</value>
                  <value>&quot;Wuhan, Hubei, China&quot;</value>
                  <value>&quot;Wuxi, China&quot;</value>
                  <value>&quot;Wuyishan, China&quot;</value>
                  <value>&quot;Xi&apos;An, China&quot;</value>
                  <value>&quot;Xi&apos;an, China&quot;</value>
                  <value>&quot;Xi&apos;an, Shanxi, China&quot;</value>
                  <value>&quot;Xi-An, China&quot;</value>
                  <value>&quot;Xiamen, China&quot;</value>
                  <value>&quot;Xining, China&quot;</value>
                  <value>&quot;Yantai, Shandong, China&quot;</value>
                  <value>&quot;Yellow Mountain, China&quot;</value>
                  <value>&quot;Zhang Jia Jie, Hunan, China&quot;</value>
                  <value>&quot;Zhangjiajie, China&quot;</value>
                  <value>&quot;Zhejiang University, Hangzhou, China&quot;</value>
                  <value>&quot;Zhengzhou, China&quot;</value>
                  <value>&quot;Zhuhai, China&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;Adelphi, Maryland, USA&quot;' value='US' />
                <alias key='&quot;Advanced Information Management, Gyeongju, Korea&quot;' value='Korea' />
                <alias key='&quot;Beijing China&quot;' value='China' />
                <alias key='&quot;Österreichische Artificial-Intelligence-Tagung, Ottstein/Niederösterreich&quot;' value='Other' />
              </aliases>
            </column>
            <column datatype='string' name='[Where (copy)]' role='dimension' semantic-role='[geocodes-20111027].[name]' type='nominal'>
              <calculation class='tableau' formula='[Where]' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Begins]' derivation='Year' name='[yr:Begins:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Begins]' derivation='Year' name='[yr:Begins:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40843.710587442132].[yr:Begins:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Begins:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Begins:ok]' member='1004' />
                <groupfilter function='member' level='[yr:Begins:ok]' member='1889' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.40843.710587442132].[Action (Where)]</column>
            <column>[csv.40843.710587442132].[yr:Begins:qk]</column>
            <column>[csv.40843.710587442132].[yr:Begins:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.40843.710587442132].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.40843.710587442132].[sum:Number of Records:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.40843.710587442132].[sum:Number of Records:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
              <color column='[csv.40843.710587442132].[Where (copy) (group)]' />
            </mark>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.40843.710587442132].[sum:Number of Records:qk]</rows>
        <cols>[csv.40843.710587442132].[yr:Begins:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='4' param='horz' type='layout-flow' w='100000' x='0' y='0'>
          <zone h='100000' id='2' type='layout-basic' w='87979' x='0' y='0'>
            <zone h='100000' id='7' name='Sheet 2' show-title='true' w='23828' x='64151' y='0'>
            </zone>
            <zone h='50000' id='10' name='Sheet 1' show-title='true' w='64151' x='0' y='0'>
            </zone>
            <zone h='50000' id='8' name='Sheet 3' show-title='true' w='64151' x='0' y='50000'>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='3' param='vert' type='layout-flow' w='11741' x='87979' y='0'>
            <zone h='11994' id='9' name='Sheet 3' param='[csv.40843.710587442132].[Where (copy) (group)]' type='color' w='11741' x='87979' y='0'>
            </zone>
            <zone h='7398' id='11' name='Sheet 1' param='[csv.40843.710587442132].[yr:Begins:qk]' type='filter' w='11741' x='87979' y='11994'>
            </zone>
            <zone h='13788' id='12' name='Sheet 1' param='[csv.40843.710587442132].[sum:Number of Records:qk]' type='size' w='11741' x='87979' y='19392'>
            </zone>
            <zone h='6501' id='13' name='Sheet 1' param='[csv.40843.710587442132].[sum:Number of Records:qk]' type='color' w='11741' x='87979' y='33180'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' hidden='false' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.40843.710587442132].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[csv.40843.710587442132].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='mapset' />
            <card param='[csv.40843.710587442132].[yr:Begins:qk]' show-null-ctrls='false' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.40843.710587442132].[Action (Where)]</field>
          <field>[csv.40843.710587442132].[yr:Begins:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.40843.710587442132].[:Measure Names]</field>
          <field>[csv.40843.710587442132].[none:ConfID:nk]</field>
          <field>[csv.40843.710587442132].[none:Title:nk]</field>
          <field>[csv.40843.710587442132].[none:Where:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.40843.710587442132].[Where (copy) (group)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.40843.710587442132].[Where (copy) (group)]</field>
          <field>[csv.40843.710587442132].[yr:Begins:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <zones>
        <zone name='Sheet 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 3'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 3' pane-specification-id='0' param='[csv.40843.710587442132].[Where (copy) (group)]' type='color'>
        </zone>
        <zone name='Sheet 1' param='[csv.40843.710587442132].[yr:Begins:qk]' show-null-ctrls='false' type='filter' values='relevant'>
        </zone>
        <zone name='Sheet 1' pane-specification-id='0' param='[csv.40843.710587442132].[sum:Number of Records:qk]' type='size'>
        </zone>
        <zone name='Sheet 1' pane-specification-id='0' param='[csv.40843.710587442132].[sum:Number of Records:qk]' type='color'>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      lw/VyQ4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
